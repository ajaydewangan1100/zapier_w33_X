// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String
}

model Zap {
  id        String   @id @default(uuid())
  triggerId String
  Trigger   Trigger?
  Actions   Action[]
  ZapRuns   ZapRun[]
}

model Trigger {
  id        String            @id @default(uuid())
  zapId     String            @unique
  zap       Zap               @relation(fields: [zapId], references: [id])
  triggerId String
  type      AvailableTriggers @relation(fields: [triggerId], references: [id])
}

model Action {
  id       String           @id @default(uuid())
  zapId    String
  zap      Zap              @relation(fields: [zapId], references: [id])
  actionId String
  type     AvaialableAction @relation(fields: [actionId], references: [id])
}

model AvaialableAction {
  id      String   @id @default(uuid())
  name    String
  Actions Action[]
}

model AvailableTriggers {
  id      String    @id @default(uuid())
  name    String
  Trigger Trigger[]
}

// zap run to show users on users dashboard
model ZapRun {
  id           String        @id @default(uuid())
  metadata     Json
  zapId        String
  type         Zap           @relation(fields: [zapId], references: [id])
  zapRunOutbox ZapRunOutbox?
}

// zap run outbox for Kafka queue to use 
model ZapRunOutbox {
  id       String @id @default(uuid())
  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
